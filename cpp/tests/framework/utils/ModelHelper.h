// Copyright 2025 Robotick Labs CIC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#pragma once

#include "robotick/framework/Model.h"

#include <string>
#include <vector>

namespace robotick::test::model_helpers
{

	// Create a new SequencedGroupWorkload that wraps all existing top-level workloads
	static void wrap_all_in_sequenced_group(Model& model, double tick_rate_hz = 100.0)
	{
		const auto& seeds = model.get_workload_seeds();
		std::vector<WorkloadHandle> all_handles;

		for (uint32_t i = 0; i < static_cast<uint32_t>(seeds.size()); ++i)
		{
			all_handles.push_back({i});
		}

		auto group_handle = model.add("SequencedGroupWorkload", "autogenerated_sequenced_group", all_handles, tick_rate_hz);
		model.set_root(group_handle);
	}

} // namespace robotick::test::model_helpers
